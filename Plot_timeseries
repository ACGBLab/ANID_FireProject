## This script allow to visualise the time series obtained from Sentinel_ts script (Authors: Laboratorio de Adaptación Climática y Gestión del Bosque, based on Philipp Gärtner Blog)

## Load libraries
library(reticulate)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(patchwork)


## dataframe obtained from Sentinel 2 for an aleatory point of categort 21
df <- py$pd_df # this data is translated from python to R by reticulate package.

head(df)

## Save the time series with the name of the point and category

write.csv(df, "pto1_cat21.csv") ## keep the names of each point and category in the name of the file

df <- read.csv("pto1_cat21.csv")

names(df) # verify the names of the columns
colnames(df) <- c("Fecha","Nub","ndvi") # change the names of the columns

str(df) ##  verify the structure of the files

## create an object with dply structure

xx <- df %>%
  mutate(row_names = rownames(df)) %>%
  mutate(datetime = stringr::str_split(row_names, "T", simplify = TRUE)[,1]) %>%
  select(-row_names) %>%
  drop_na(ndvi) %>%
  mutate(date = as.Date(datetime, format="%Y-%m-%d")) %>%
  filter(cld < 10) %>%
  mutate(yday = lubridate::yday(date)) %>%
  mutate(year = lubridate::year(date)) %>%
  mutate(id = 1:n())

str(xx) ## verify new structure


## Creat an object to group the maximum and minimum NDVI values of each year 

max <- xx %>%
  group_by(year) %>%
  filter(ndvi == max(ndvi)) 

min <- xx %>%
  group_by(year) %>%
  filter(ndvi == min(ndvi)) 

## Set the plot title

plot_title <- expression(paste("", italic("Ejemplo Serie de tiempo Categoría de Combustible 21"), "- Región de Valparaíso"))

## Create and object for the plot

plt <- ggplot(data = xx, aes(x = date, y = ndvi, fill = id)) + 
  geom_smooth(colour = "black", size=  0.25,se = FALSE, span = 0.15)+
  geom_point(colour = "white",pch=21) + 
  geom_point(data = max, aes(x = date, y = ndvi),fill = "red", pch = 21) +
  geom_point(data = min, aes(x = date, y = ndvi),fill = "orange", pch = 21) +
  ggtitle(plot_title) +
  xlab("") + ylab("Normalized Vegetation Index (NDVI)") +
  scale_fill_viridis_c() + theme_minimal() + theme(legend.position = "none") 

# Display the NDVI time series plot

plt

